{"version":3,"sources":["components/Calculator.js","logic/operate.js","components/Home.js","components/Quote.js","components/Nav.js","App.js","logic/calculate.js","index.js"],"names":["Calculator","props","handleEvent","output","className","type","onClick","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Home","Quote","Nav","linkStyle","color","textDecoration","fontWeight","fontSize","style","to","App","useState","next","total","state","setState","path","element","e","prevState","obj","buttonName","target","innerText","match","includes","parseFloat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3f630c2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Calculator(props) {\n  const { handleEvent, output } = props;\n  return (\n    <div className=\"calculatorContainer\">\n      <h1>Let&apos;s do some math</h1>\n      <div className=\"calculator\">\n        <div className=\"display\">{output}</div>\n        <button type=\"button\" className=\"buttons functions\" onClick={handleEvent}>AC</button>\n        <button type=\"button\" className=\"buttons functions\" onClick={handleEvent}>+/-</button>\n        <button type=\"button\" className=\"buttons functions\" onClick={handleEvent}>%</button>\n        <button type=\"button\" className=\"buttons operetors\" onClick={handleEvent}>รท</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>7</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>8</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>9</button>\n        <button type=\"button\" className=\"buttons operetors\" onClick={handleEvent}>x</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>4</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>5</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>6</button>\n        <button type=\"button\" className=\"buttons operetors\" onClick={handleEvent}>-</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>1</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>2</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>3</button>\n        <button type=\"button\" className=\"buttons operetors\" onClick={handleEvent}>+</button>\n        <button type=\"button\" className=\"buttons operands two-span\" onClick={handleEvent}>0</button>\n        <button type=\"button\" className=\"buttons operands\" onClick={handleEvent}>.</button>\n        <button type=\"button\" className=\"buttons operetors\" onClick={handleEvent}>=</button>\n      </div>\n    </div>\n  );\n}\n\nCalculator.propTypes = {\n  output: PropTypes.instanceOf(Object).isRequired,\n  handleEvent: PropTypes.func.isRequired,\n};\n\nexport default Calculator;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from 'react';\nimport './stylesheets/home.css';\n\nconst Home = () => (\n  <div className=\"homeContainer\">\n    <h1>Welcome to our page!</h1>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit.\n      Tempore quidem rerum aliquid voluptas provident reiciendis\n      molestiae officia sint magni fugiat quibusdam voluptatum dicta\n      eligendi voluptate, fugit veritatis quisquam architecto labore.\n    </p>\n    <p>\n      Lorem ipsum dolor sit, amet consectetur adipisicing elit. Fugiat\n      fugit numquam, magni, qui saepe tenetur consectetur, praesentium\n      aut sint eligendi exercitationem! Libero iusto excepturi fuga,\n      nam ipsa dolores perspiciatis enim.\n    </p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport './stylesheets/quote.css';\n\nconst Quote = () => (\n  <div className=\"quoteContainer\">\n    <p>\n      Mathematics is not about numbers, equations, computations,\n      or  or algorithms: it is about understanding - William Poul Thurston\n    </p>\n  </div>\n);\n\nexport default Quote;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './stylesheets/nav.css';\n\nconst Nav = () => {\n  const linkStyle = {\n    color: 'white',\n    textDecoration: 'none',\n    fontWeight: 600,\n    fontSize: '20px',\n  };\n\n  const heroText = {\n    fontSize: '40px',\n    fontWeight: 900,\n  };\n\n  return (\n    <nav>\n      <h1 style={heroText}>Math Magicians</h1>\n      <ul>\n        <Link style={linkStyle} to=\"/\">\n          <li>Home</li>\n        </Link>\n        <Link style={linkStyle} to=\"/calculator\">\n          <li>Calculator</li>\n        </Link>\n        <Link style={linkStyle} to=\"/quote\">\n          <li>Quote</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Calculator from './components/Calculator';\nimport calculate from './logic/calculate';\nimport Home from './components/Home';\nimport Quote from './components/Quote';\nimport Nav from './components/Nav';\n\nfunction App() {\n  const [state, setState] = useState({\n    next: 0,\n    total: 0,\n  });\n\n  const handleEvent = (e) => { setState((prevState) => calculate(prevState, e.target.innerText)); };\n\n  let output = 0;\n  if (state.next) {\n    output = state.next;\n  } else if (state.total) {\n    output = state.total;\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/calculator\" element={<Calculator output={output} handleEvent={handleEvent} />} />\n          <Route path=\"/quote\" element={<Quote />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}